// <auto-generated />
using System;
using MachinesTelemetry.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MachinesTelemetry.Data.Migrations
{
    [DbContext(typeof(MachinesTelemetryDbContext))]
    [Migration("20250823145619_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MachinesTelemetry.Business.Models.Machine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastTelemetryID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LastTelemetryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("LastTelemetryId");

                    b.ToTable("Machines", (string)null);
                });

            modelBuilder.Entity("MachinesTelemetry.Business.Models.Telemetry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<Guid>("MachineId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("Telemetries", (string)null);
                });

            modelBuilder.Entity("MachinesTelemetry.Business.Models.Machine", b =>
                {
                    b.HasOne("MachinesTelemetry.Business.Models.Telemetry", "LastTelemetry")
                        .WithMany()
                        .HasForeignKey("LastTelemetryId");

                    b.Navigation("LastTelemetry");
                });

            modelBuilder.Entity("MachinesTelemetry.Business.Models.Telemetry", b =>
                {
                    b.HasOne("MachinesTelemetry.Business.Models.Machine", "Machine")
                        .WithMany("Telemetries")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("MachinesTelemetry.Business.Models.Machine", b =>
                {
                    b.Navigation("Telemetries");
                });
#pragma warning restore 612, 618
        }
    }
}
